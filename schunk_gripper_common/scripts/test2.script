def SomeProgramName():

    EGUEGK_rpc_ip = "127.0.0.1"
    EGUEGK_rpc_port = 55050

    def EGUEGK_rpcGetResult(response):
        tokenIndex = str_find(response, ",")
        if (tokenIndex < 0):
            tokenIndex = str_len(response)
        end
        typeStr = str_sub(response, 0, tokenIndex)
        resultStr = str_sub(response, tokenIndex + 1)

        if (typeStr == "boolean"):
            return resultStr == "true"
        elif (typeStr == "short"):
            return to_num(resultStr)
        elif (typeStr == "int"):
            return to_num(resultStr)
        elif (typeStr == "long"):
            return to_num(resultStr)
        elif (typeStr == "float"):
            return to_num(resultStr)
        elif (typeStr == "double"):
            return to_num(resultStr)
        elif (typeStr == "exception"):
            return resultStr
        end

        # if debug:
        #     textmsg("After Get Result= ", response)
        # end

    end

    def EGUEGK_rpcCall(socket_name, socket_address, socket_port, command, timeout = 2):
        isSocketOpen = socket_open(socket_address, socket_port, socket_name)
        if not isSocketOpen:
            return "exception,RPC socket failed to open"
        end
        if not socket_send_line(command, socket_name):
          return "exception,RPC socket failed to send command"
        end
        sync()
        response = socket_read_line(socket_name, timeout)
        if str_empty(response):
            return "exception,Invalid RPC respoooonse"
        end
        socket_close(socket_name)
        return response
    end

    def EGUEGK_rpcIsException(response):
        tokenIndex = str_find(response, ",")
        if (tokenIndex < 0):
            tokenIndex = str_len(response)
        end
        typeStr = str_sub(response, 0, tokenIndex)
        return typeStr == "exception"
    end

    def EGUEGK_executeCommand(socket_name, command, timeout = 1000):
        response = EGUEGK_rpcCall(socket_name, EGUEGK_rpc_ip, EGUEGK_rpc_port, command, timeout)
        if (EGUEGK_rpcIsException(response)):
            popup("RPC Error: " + EGUEGK_rpcGetResult(response))
            return None
        end
        return response
    end

    def EGUEGK_moveAbsolute(socket_name, gripperIndex, position, speed):
        command = "absolute(" + to_str(gripperIndex) + ", " + to_str(position) + ", " + to_str(speed) + ")"
        EGUEGK_executeCommand(socket_name, command)
    end

    # Grasp Sensor Commands *********************************************************************
    def EGUEGK_waitForComplete(socket_name, gripperIndex, d):
        blank = 0
    end

    def EGUEGK_moveToPos(gripperNumber, position, isWaitComplete):
        #movej([2.95, -0.95, 1.95, -2.14, 1.69, 6.00], a=1.4, v=1.05, t=0, r =0)
        gripperIndex = gripperNumber - 1
        socket_name = "socket_grasp_sensor"
        speed = 50
        EGUEGK_moveAbsolute(socket_name, gripperIndex, position, speed)
        #if isWaitComplete:
        #    EGUEGK_waitForComplete(socket_name, gripperIndex, 10000)
        #end
    end

    def EGUEGK_getPosition(gripperNumber = 1):
        gripperIndex = gripperNumber - 1
        command = "getPosition(" + to_str(gripperIndex) + ")"
        response = EGUEGK_executeCommand(to_str("socket_status_position_" + to_str(EGUEGK_getNextId())), command)
        return EGUEGK_rpcGetResult(response)
    end

    EGUEGK_moveToPos(1, 10, 0)
end
# Newline here is important